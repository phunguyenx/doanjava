/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raven.form;

import Controller.BillControl;
import Controller.FurnitureControl;
import Controller.RoomControl;
import Controller.TypeRoomControl;
import Model.Furniture;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGUYEN PHUC NAM
 */
public final class FormFurniture extends javax.swing.JFrame {

    private ArrayList<Furniture> listFurnitures;
    private final ArrayList<String> listNameTypeRoom;
    private ArrayList<Furniture> listFurnitureAdds;
    private ArrayList<Integer> listIndexs;
    DefaultTableModel model;

    /**
     * Creates new form FormLoaiPhong
     */
    public FormFurniture() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
        listNameTypeRoom = TypeRoomControl.getListNameTypeRoom();

        model = (DefaultTableModel) jTable1.getModel();
        jTenLoaiPhong.addItem("Loại Phòng");
        for (String ntr : listNameTypeRoom) {
            jTenLoaiPhong.addItem(ntr);
        }
        showTable();

    }

    public void showTable() {
        listFurnitures = FurnitureControl.getlistFurnituresByTypeRoom();
        for (Furniture fur : listFurnitures) {
            if (fur.getStatus() == 1) {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Bình Thường"
                });
            } else {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Hỏng"
                });
            }
        }
    }

    public void showResult() {
        for (Furniture fur : listFurnitureAdds) {
            if (fur.getStatus() == 1) {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Bình Thường"
                });
            } else {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Hỏng"
                });
            }
        }
    }
    public void showResultFound(String roomNumber) {
        for (Furniture fur : FurnitureControl.findListFurByRoomNumber(roomNumber)) {
            if (fur.getStatus() == 1) {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Bình Thường"
                });
            } else {
                model.addRow(new Object[]{
                    fur.getId(), fur.getName(), fur.getPrice(), fur.getRoomNumber(), fur.getName_tRoom(), "Hỏng"
                });
            }
        }
    }
    public void MaintenanceOrBreak(String s, int row) {
        int cf = JOptionPane.showConfirmDialog(null,
                "Bạn có muốn " + s + " không?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
        if (cf == 0) {
            if (FurnitureControl.MaintenanceOrBreak(jTable1.getValueAt(row, 0).toString())) {
                JOptionPane.showMessageDialog(null, s + " thành công!");
                while (model.getRowCount() != 0) {
                    model.removeRow(0);
                }
                showTable();
            }else{
                JOptionPane.showMessageDialog(null, "Xảy ra lỗi");
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jTextPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonThem = new javax.swing.JButton();
        jButtonsua = new javax.swing.JButton();
        jButtonXoa = new javax.swing.JButton();
        jButtonLammoi = new javax.swing.JButton();
        jTenLoaiPhong = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        timTheoPhong = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Quản Lý Cơ Sở Vật Chất");

        jLabel3.setText("Tên Đồ Dùng");

        jLabel5.setText("Giá đồ dùng");

        jButtonThem.setText("Thêm");
        jButtonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThemActionPerformed(evt);
            }
        });

        jButtonsua.setText("Sửa");
        jButtonsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsuaActionPerformed(evt);
            }
        });

        jButtonXoa.setText("Xóa");
        jButtonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXoaActionPerformed(evt);
            }
        });

        jButtonLammoi.setText("Làm mới");
        jButtonLammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLammoiActionPerformed(evt);
            }
        });

        jTenLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTenLoaiPhongActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Đồ Dùng", "Tên Đồ Dùng", "Giá ", "Số Phòng", "Loại Phòng", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        timTheoPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timTheoPhongActionPerformed(evt);
            }
        });
        timTheoPhong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timTheoPhongKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                timTheoPhongKeyTyped(evt);
            }
        });

        jLabel2.setText("Số Phòng: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(465, 465, 465)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextName)
                    .addComponent(jLabel3)
                    .addComponent(jTextPrice)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTenLoaiPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonsua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonLammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timTheoPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timTheoPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jTenLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonsua)
                            .addComponent(jButtonThem))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonXoa)
                            .addComponent(jButtonLammoi))
                        .addGap(185, 185, 185))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThemActionPerformed
        // TODO add your handling code here:
        if (jTextName.getText().isEmpty() || jTextName.getText().isEmpty() || jTextPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin");
        } else if (jTenLoaiPhong.getSelectedItem().equals("Loại Phòng")) {
            JOptionPane.showMessageDialog(null, "Hãy chọn loại phòng muốn thêm đồ dùng.");
        } else {
            try {
                String name = jTextName.getText();
                int price = Integer.parseInt(jTextPrice.getText());
                String Name_tRoom = jTenLoaiPhong.getSelectedItem().toString();

                int check = FurnitureControl.check(name, price, Name_tRoom);
                switch (check) {
                    //case -1 -> JOptionPane.showMessageDialog(null, "Vui lòng bấm làm mới trước khi thêm");
                    //case -2 -> JOptionPane.showMessageDialog(null, "Đồ dùng này đã có ở loại phòng này");
                    case 1 -> {
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        listFurnitureAdds = FurnitureControl.getlistAddedFurnitures(Name_tRoom);
                        showResult();
                    }
                    case 0 ->
                        JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi vui lòng thử lại");
                    default ->
                        throw new AssertionError();
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Giá không bao gồm các chữ và kí tự ");
            }

        }


    }//GEN-LAST:event_jButtonThemActionPerformed

    private void jButtonsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsuaActionPerformed
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng đồ dùng trong phòng cần sửa");
        } else {
            int cf = JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa không?",
                    "XÁC NHẬN", JOptionPane.YES_NO_OPTION);
            if (cf == 0) {
                String nameOld = "";
                int priceOld = 0;
                String name_tRoomOld = "";
                String name = "";
                int price = 0;
                String name_tRoom = "";
                try {
                    nameOld = jTable1.getValueAt(i, 1).toString();
                    priceOld = Integer.parseInt(jTable1.getValueAt(i, 2).toString());
                    name_tRoomOld = jTable1.getValueAt(i, 4).toString();

                    name = jTextName.getText();
                    price = Integer.parseInt(jTextPrice.getText());
                    name_tRoom = jTenLoaiPhong.getSelectedItem().toString();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Giá không bao gồm chữ và kí tự!");
                    return;
                }

                if (name_tRoom.equals(name_tRoomOld)) {
                    listIndexs = FurnitureControl.getListIndexRowByType(nameOld, priceOld, name_tRoomOld);
                    int check = FurnitureControl.edit(name, price, nameOld, priceOld, name_tRoomOld);

                    switch (check) {
                        case 1 -> {
                            JOptionPane.showMessageDialog(null, "Sửa thành công");
                            for (Integer a : listIndexs) {
                                model.setValueAt(name, a, 1);
                                model.setValueAt(price, a, 2);
                                model.setValueAt(name_tRoom, a, 4);
                                jTable1.updateUI();
                            }
                        }
                        case 0 ->
                            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi vui lòng thử lại");
                        default ->
                            throw new AssertionError();
                    }
                } else {
                    // xoa
                    ArrayList<String> arr = RoomControl.getListRoomNumberByType(name_tRoomOld);
                    ArrayList<Integer> indexs = FurnitureControl
                            .getListIndexRowByType(nameOld, priceOld, name_tRoomOld);

                    FurnitureControl.Remove(nameOld, priceOld, arr);
                    int k = 1;
                    for (int j = 1; j < indexs.size(); j++) {
                        indexs.set(j, indexs.get(j) - k);
                        k++;
                    }
                    for (Integer j : indexs) {
                        model.removeRow(j);
                    }
                    //them
                    int check = FurnitureControl.check(name, price, name_tRoom);
                    switch (check) {
                        //case -1 -> JOptionPane.showMessageDialog(null, "Vui lòng bấm làm mới trước khi thêm");
                        //case -2 -> JOptionPane.showMessageDialog(null, "Đồ dùng này đã có ở loại phòng này");
                        case 1 -> {
                            JOptionPane.showMessageDialog(null, "Sửa Thành Công");
                            listFurnitureAdds = FurnitureControl.getlistAddedFurnitures(name_tRoom);
                            showResult();
                        }
                        case 0 ->
                            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi vui lòng thử lại");
                        default ->
                            throw new AssertionError();
                    }

                }

            }
        }
    }//GEN-LAST:event_jButtonsuaActionPerformed

    private void jButtonLammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLammoiActionPerformed
        // TODO add your handling code here:
        jTextName.setText("");
        jTextPrice.setText("");
        jTenLoaiPhong.setSelectedIndex(0);
        jTable1.clearSelection();
    }//GEN-LAST:event_jButtonLammoiActionPerformed

    private void jTenLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTenLoaiPhongActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTenLoaiPhongActionPerformed

    private void jButtonXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXoaActionPerformed
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn đồ dùng muốn xóa.");
        } else {
            int cf = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa không?",
                    "XÁC NHẬN", JOptionPane.YES_NO_OPTION);
            if (cf == 0) {
                String name = jTable1.getValueAt(i, 1).toString();
                int price = (int) jTable1.getValueAt(i, 2);
                String name_tRoom = jTable1.getValueAt(i, 4).toString();
                ArrayList<String> arr = RoomControl.getListRoomNumberByType(name_tRoom);
                ArrayList<Integer> indexs = FurnitureControl.getListIndexRowByType(name, price, name_tRoom);

                int check = FurnitureControl.Remove(name, price, arr);
                switch (check) {
                    case 1 -> {
                        JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                        int k = 1;
                        for (int j = 1; j < indexs.size(); j++) {
                            indexs.set(j, indexs.get(j) - k);
                            k++;
                        }
                        for (Integer j : indexs) {
                            model.removeRow(j);
                        }
                    }
                    case -1 ->
                        JOptionPane.showMessageDialog(null, "Xóa Thất Bại");
                }

            }
        }
    }//GEN-LAST:event_jButtonXoaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        jTextName.setText(jTable1.getValueAt(i, 1).toString());
        jTextPrice.setText(jTable1.getValueAt(i, 2).toString());
        jTenLoaiPhong.setSelectedItem(jTable1.getValueAt(i, 4));

        JMenuItem baohong = new JMenuItem("Báo Hỏng");
        JMenuItem suachua = new JMenuItem("Sửa Chữa");

        if (jTable1.getValueAt(i, 5).equals("Hỏng")) {
            ActionListener a = (ActionEvent e) -> {
                MaintenanceOrBreak(suachua.getText(), i);
            };
            suachua.addActionListener(a);
            if (jPopupMenu1.getComponentCount() == 0) {
                jPopupMenu1.add(suachua);
            } else {
                jPopupMenu1.remove(0);
                jPopupMenu1.add(suachua);
            }
        } else {
            ActionListener a = (ActionEvent e) -> {
                MaintenanceOrBreak(baohong.getText(), i);
            };
            baohong.addActionListener(a);
            if (jPopupMenu1.getComponentCount() == 0) {
                jPopupMenu1.add(baohong);
            } else {
                jPopupMenu1.remove(0);
                jPopupMenu1.add(baohong);
            }
        }
        jPopupMenu1.show(jTable1, evt.getX(), evt.getY());
    }//GEN-LAST:event_jTable1MouseClicked

    private void timTheoPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timTheoPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timTheoPhongActionPerformed

    private void timTheoPhongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timTheoPhongKeyPressed
        // TODO add your handling code here:
        while (jTable1.getRowCount() != 0) {            
            model.removeRow(0);
        }
        showResultFound(timTheoPhong.getText());
        System.out.println(timTheoPhong.getText());
    }//GEN-LAST:event_timTheoPhongKeyPressed

    private void timTheoPhongKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timTheoPhongKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_timTheoPhongKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormFurniture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormFurniture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLammoi;
    private javax.swing.JButton jButtonThem;
    private javax.swing.JButton jButtonXoa;
    private javax.swing.JButton jButtonsua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jTenLoaiPhong;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPrice;
    private javax.swing.JTextField timTheoPhong;
    // End of variables declaration//GEN-END:variables
}
